- name: Install cart component
  hosts: cart
  become: yes
  tasks:
    - name: Disable Node.js module
      ansible.builtin.command:
        cmd: dnf module disable nodejs -y

    - name: Enable Node.js 20 module
      ansible.builtin.command:
        cmd: dnf module enable nodejs:20 -y

    - name: Install Node.js
      ansible.builtin.dnf:
        name: nodejs
        state: installed

    - name: Check if roboshop user exists
      ansible.builtin.command:
        cmd: id roboshop
      register: out
      ignore_errors: true

    - name: Create roboshop user if not exists
      ansible.builtin.user:
        name: roboshop
      when: out.rc != 0

    - name: Check if /app directory exists
      ansible.builtin.stat:
        path: /app
      register: directory

    - name: Create /app directory if not exists
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == False

    - name: Download the application code
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/cart.zip
        dest: /tmp/cart.zip

    - name: Extract the application code
      ansible.builtin.unarchive:
        src: /tmp/cart.zip
        dest: /app
        remote_src: yes

    - name: Install application dependencies
      ansible.builtin.command:
        cmd: npm install
      args:
        chdir: /app

    - name: Set up cart service
      ansible.builtin.copy:
        src: cart.service
        dest: /etc/systemd/system/cart.service

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Start and enable cart service
      ansible.builtin.service:
        name: cart
        state: started
        enabled: true

      

    