- name: Create dispatch component
  hosts: dispatch
  become: true
  tasks:
    - name: Install GoLang
      ansible.builtin.dnf:
        name: golang
        state: installed

    - name: Check if roboshop user exists
      ansible.builtin.command:
        cmd: id roboshop
      register: output
      ignore_errors: true

    - name: Create roboshop user if not exists
      ansible.builtin.user:
        name: roboshop
      when: output.rc != 0

    - name: Check if /app directory exists
      ansible.builtin.stat:
        path: /app
      register: directory

    - name: Print the directory stats
      ansible.builtin.debug:
        msg: "output: {{ directory }}"

    - name: Create /app directory if not exists
      ansible.builtin.file:
        path: /app
        state: directory
      when: not directory.stat.exists

    - name: Download the application code
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/dispatch.zip
        dest: /tmp/dispatch.zip

    - name: Unzip the application code
      ansible.builtin.unarchive:
        src: /tmp/dispatch.zip
        dest: /app
        remote_src: yes

    - name: Initialize Go modules if go.mod doesn't exist
      ansible.builtin.command:
        cmd: go mod init dispatch
      args:
        chdir: /app
      when: not ansible_facts['files']['/app/go.mod']

    - name: Get Go dependencies
      ansible.builtin.command:
        cmd: go get
      args:
        chdir: /app

    - name: Build the Go application
      ansible.builtin.command:
        cmd: go build
      args:
        chdir: /app

    - name: Create systemd dispatch service
      ansible.builtin.copy:
        src: dispatch.service
        dest: /etc/systemd/system/dispatch.service

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Start and enable the dispatch service
      ansible.builtin.service:
        name: dispatch
        state: started
        enabled: true

